#version 450

#extension GL_GOOGLE_include_directive : require

#include "common.glsl"

// ------------------------------------------------------------------
// DEFINES ----------------------------------------------------------
// ------------------------------------------------------------------

#define NUM_THREADS 32

// ------------------------------------------------------------------
// INPUTS -----------------------------------------------------------
// ------------------------------------------------------------------

layout(local_size_x = NUM_THREADS, local_size_y = NUM_THREADS, local_size_z = 1) in;

// ------------------------------------------------------------------
// DESCRIPTOR SETS --------------------------------------------------
// ------------------------------------------------------------------

layout(set = 0, binding = 0, rgba16f) uniform image2D i_ReprojectedColor;

layout(set = 1, binding = 0) uniform sampler2D s_Color;
layout(set = 2, binding = 0) uniform sampler2D s_PrevColor;
layout(set = 3, binding = 1) uniform sampler2D i_Hit;

layout(set = 4, binding = 0) uniform sampler2D s_GBuffer1; // RGB: Albedo, A: Roughness
layout(set = 4, binding = 1) uniform sampler2D s_GBuffer2; // RGB: Normal, A: Metallic
layout(set = 4, binding = 2) uniform sampler2D s_GBuffer3; // RG: Motion Vector, BA: -
layout(set = 4, binding = 3) uniform sampler2D s_GBufferDepth;

layout(set = 5, binding = 0) uniform PerFrameUBO
{
    mat4  view_inverse;
    mat4  proj_inverse;
    mat4  view_proj_inverse;
    mat4  prev_view_proj;
    mat4  view_proj;
    vec4  cam_pos;
    Light light;
}
ubo;

// ------------------------------------------------------------------------
// PUSH CONSTANTS ---------------------------------------------------------
// ------------------------------------------------------------------------

layout(push_constant) uniform PushConstants
{
    uint  first_frame;
    float alpha;
}
u_PushConstants;

// ------------------------------------------------------------------
// MAIN -------------------------------------------------------------
// ------------------------------------------------------------------

void main()
{
    // Query the G-Buffer image size
    ivec2 size = textureSize(s_GBuffer1, 0);

    // Compute current pixel coord
    ivec2 current_coord = ivec2(gl_GlobalInvocationID.xy);
    
    // Sample the motion vector for the current pixel
    vec4 motion = texelFetch(s_GBuffer3, current_coord, 0);
    
    // Compute previous pixel coord using motion vector
    ivec2 prev_coord = current_coord + ivec2(motion.xy * vec2(size));

    // Fetch current and previous pixels
    vec4 current = texelFetch(s_Color, current_coord, 0);
    vec4 prev    = texelFetch(s_PrevColor, prev_coord, 0);

    // Blend previous and current sample
    vec4 blended_sample = mix(prev, current, u_PushConstants.alpha);

    // Store blended sample into the storage image
    imageStore(i_ReprojectedColor, current_coord, blended_sample);
}

// ------------------------------------------------------------------